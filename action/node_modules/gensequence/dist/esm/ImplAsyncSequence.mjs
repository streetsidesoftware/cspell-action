import { reduceAsyncForAsyncIterator } from './operators/index.mjs';
export class ImplAsyncSequence {
    constructor(i) {
        this.i = i;
    }
    get iter() {
        return typeof this.i === 'function' ? this.i() : this.i;
    }
    [Symbol.asyncIterator]() {
        return this.iter[Symbol.asyncIterator]();
    }
    reduceAsync(fnReduceAsync, initialValue) {
        return reduceAsyncForAsyncIterator(fnReduceAsync, initialValue)(this.iter);
    }
}
