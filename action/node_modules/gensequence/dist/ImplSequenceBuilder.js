"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImplSequenceBuilder = void 0;
const index_js_1 = require("./operators/index.js");
const ImplSequence_js_1 = require("./ImplSequence.js");
class ImplSequenceBuilder {
    constructor(operators = []) {
        this.operators = [];
        this.operators = operators;
    }
    build(i) {
        return new ImplSequence_js_1.ImplSequence(i).pipe(index_js_1.pipe.apply(null, this.operators));
    }
    pipe(...fns) {
        return new ImplSequenceBuilder([...this.operators, ...fns]);
    }
    //// Filters
    /** keep values where the fnFilter(t) returns true */
    filter(fnFilter) {
        return this.pipe((0, index_js_1.filter)(fnFilter));
    }
    skip(n) {
        return this.pipe((0, index_js_1.skip)(n));
    }
    take(n) {
        return this.pipe((0, index_js_1.take)(n));
    }
    //// Extenders
    concat(j) {
        return this.pipe((0, index_js_1.concat)(j));
    }
    concatMap(fn) {
        return this.pipe((0, index_js_1.concatMap)(fn));
    }
    //// Mappers
    combine(fn, j) {
        return this.pipe((0, index_js_1.combine)(fn, j));
    }
    /** map values from type T to type U */
    map(fnMap) {
        return this.pipe((0, index_js_1.map)(fnMap));
    }
    scan(fnReduce, initialValue) {
        return this.pipe((0, index_js_1.scan)(fnReduce, initialValue));
    }
}
exports.ImplSequenceBuilder = ImplSequenceBuilder;
//# sourceMappingURL=ImplSequenceBuilder.js.map