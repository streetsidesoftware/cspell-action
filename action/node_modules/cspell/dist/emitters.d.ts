import { TextDocumentOffset } from 'cspell-lib';
export declare type Issue = TextDocumentOffset;
export declare type MessageType = 'Debug' | 'Info';
export declare type MessageTypeLookup = {
    [key in MessageType]: key;
};
export declare const MessageTypes: MessageTypeLookup;
export interface MessageEmitter {
    (message: string, msgType: MessageType): void;
}
export interface DebugEmitter {
    (message: string): void;
}
export interface ErrorEmitterVoid {
    (message: string, error: Error): void;
}
export interface ErrorEmitterPromise {
    (message: string, error: Error): Promise<void>;
}
declare type ErrorEmitter = ErrorEmitterVoid | ErrorEmitterPromise;
export interface SpellingErrorEmitter {
    (issue: Issue): void;
}
export declare type ProgressTypes = 'ProgressFileComplete';
export interface ProgressItem {
    type: ProgressTypes;
}
export interface ProgressFileComplete extends ProgressItem {
    type: 'ProgressFileComplete';
    fileNum: number;
    fileCount: number;
    filename: string;
    elapsedTimeMs: number | undefined;
}
export declare type ProgressEmitter = (p: ProgressItem | ProgressFileComplete) => void;
export interface Emitters {
    issue: SpellingErrorEmitter;
    info: MessageEmitter;
    debug: DebugEmitter;
    error: ErrorEmitter;
    progress: ProgressEmitter;
}
export declare function isProgressFileComplete(p: ProgressItem): p is ProgressFileComplete;
export {};
