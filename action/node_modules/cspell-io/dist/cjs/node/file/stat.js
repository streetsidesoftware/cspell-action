"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getStatHttp = exports.getStatSync = exports.getStat = void 0;
const fs_1 = require("fs");
const util_1 = require("util");
const fetch_js_1 = require("./fetch.js");
const util_js_1 = require("./util.js");
async function getStat(filenameOrUri) {
    if ((0, util_js_1.isUrlLike)(filenameOrUri)) {
        const url = (0, util_js_1.toURL)(filenameOrUri);
        if (!(0, util_js_1.isFileURL)(url)) {
            try {
                return await getStatHttp(url);
            }
            catch (e) {
                return toError(e);
            }
        }
    }
    return fs_1.promises.stat(filenameOrUri).catch((e) => toError(e));
}
exports.getStat = getStat;
function getStatSync(uri) {
    try {
        return (0, fs_1.statSync)(uri);
    }
    catch (e) {
        return toError(e);
    }
}
exports.getStatSync = getStatSync;
async function getStatHttp(url) {
    const headers = await (0, fetch_js_1.fetchHead)(url);
    const eTag = headers.get('etag') || undefined;
    const guessSize = Number.parseInt(headers.get('content-length') || '0', 10);
    return {
        size: eTag ? -1 : guessSize,
        mtimeMs: 0,
        eTag,
    };
}
exports.getStatHttp = getStatHttp;
function toError(e) {
    if (isErrnoException(e) || e instanceof Error)
        return e;
    return new Error((0, util_1.format)(e));
}
function isErrnoException(e) {
    if (!e || typeof e !== 'object')
        return false;
    const err = e;
    return err.message !== undefined && err.name !== undefined;
}
//# sourceMappingURL=stat.js.map