"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tokenizedLinesToMarkdown = exports.tokenizedLineToMarkdown = exports._tokenizedLineToMarkdown = void 0;
const markdownHelper_js_1 = require("./markdownHelper.js");
function _tokenizedLineToMarkdown(line, indentation = '') {
    const markdownLines = [];
    const header = `- \`${line.line.lineNumber + 1}\`: ${(0, markdownHelper_js_1.toInlineCode)(line.line.text)}

  | text      | scope                                                    |
  | --------- | -------------------------------------------------------- |`;
    markdownLines.push(...header.split('\n'));
    markdownLines.push(...line.tokens.map((t) => `  | ${(0, markdownHelper_js_1.toInlineCode)(t.text)} | ${t.scope} |`));
    return markdownLines.map((line) => indentation + line).join('\n') + '\n\n';
}
exports._tokenizedLineToMarkdown = _tokenizedLineToMarkdown;
function tokenizedLineToMarkdown(line, indentation = '') {
    const rows = line.tokens.map((t) => `| ${(0, markdownHelper_js_1.toInlineCode)(t.text)} | ${t.scope} |`);
    const detail = `<details>
<summary><code>${line.line.lineNumber + 1}</code>: ${(0, markdownHelper_js_1.toInlineCode)(line.line.text)}</summary>

| text      | scope                                                    |
| --------- | -------------------------------------------------------- |
${rows.join('\n')}

</details>
`;
    const markdownLines = detail.split('\n');
    return (markdownLines
        .map((line) => indentation + line)
        .map((line) => (line.trim() === '' ? '' : line))
        .join('\n') + '\n\n');
}
exports.tokenizedLineToMarkdown = tokenizedLineToMarkdown;
function tokenizedLinesToMarkdown(lines, indentation = '') {
    return lines.map((line) => tokenizedLineToMarkdown(line, indentation)).join('');
}
exports.tokenizedLinesToMarkdown = tokenizedLinesToMarkdown;
//# sourceMappingURL=visualizeAsMD.js.map