"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAutoResolveWeakCache = exports.AutoResolveWeakCache = exports.autoResolveWeak = exports.createAutoResolveCache = exports.AutoResolveCache = exports.autoResolve = void 0;
function autoResolve(map, key, resolve) {
    const found = map.get(key);
    if (found !== undefined || map.has(key))
        return found;
    const value = resolve(key);
    map.set(key, value);
    return value;
}
exports.autoResolve = autoResolve;
class AutoResolveCache {
    constructor() {
        this.map = new Map();
    }
    get(k, resolve) {
        return resolve ? autoResolve(this.map, k, resolve) : this.map.get(k);
    }
    has(k) {
        return this.map.has(k);
    }
    set(k, v) {
        this.map.set(k, v);
        return this;
    }
}
exports.AutoResolveCache = AutoResolveCache;
function createAutoResolveCache() {
    return new AutoResolveCache();
}
exports.createAutoResolveCache = createAutoResolveCache;
function autoResolveWeak(map, key, resolve) {
    const found = map.get(key);
    if (found !== undefined || map.has(key))
        return found;
    const value = resolve(key);
    map.set(key, value);
    return value;
}
exports.autoResolveWeak = autoResolveWeak;
class AutoResolveWeakCache {
    constructor() {
        this.map = new WeakMap();
    }
    get(k, resolve) {
        return resolve ? autoResolveWeak(this.map, k, resolve) : this.map.get(k);
    }
    has(k) {
        return this.map.has(k);
    }
    set(k, v) {
        this.map.set(k, v);
        return this;
    }
}
exports.AutoResolveWeakCache = AutoResolveWeakCache;
function createAutoResolveWeakCache() {
    return new AutoResolveWeakCache();
}
exports.createAutoResolveWeakCache = createAutoResolveWeakCache;
//# sourceMappingURL=AutoResolve.js.map