import * as path from 'path';
import { fileURLToPath, pathToFileURL } from 'url';
import { dynamicImport } from '../cjs/index.js';
const fixtures = pathToFileURL('./fixtures/');
async function callHello(file, paths) {
    // console.log('%o %o', file.toString(), paths?.toString());
    return (await dynamicImport(file, paths)).sayHello('Bob.');
}
export function test() {
    return Promise.all([
        callHello(pathToFileURL('./fixtures/hello_world.mjs')),
        callHello(path.resolve('./fixtures/hello_world.mjs')),
        callHello('./hello_world.mjs', [fixtures]),
        callHello('./hello_world.mjs', [fileURLToPath(fixtures)]),
        callHello(pathToFileURL('./fixtures/hello_world.mjs'), [fileURLToPath(fixtures)]),
    ]);
}
export async function callDynamicImport(file, paths) {
    return await dynamicImport(file, paths);
}
//# sourceMappingURL=test.cjs.mjs.map