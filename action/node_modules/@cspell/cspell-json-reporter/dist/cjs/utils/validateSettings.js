"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateSettings = void 0;
const assert_1 = require("assert");
function assertBooleanOrUndefined(key, value) {
    if (typeof value !== 'boolean' && value !== undefined) {
        throw new assert_1.AssertionError({
            message: `cspell-json-reporter settings.${key} must be a boolean`,
            actual: typeof value,
            expected: 'boolean',
        });
    }
}
/**
 * Throws an error if passed cspell-json-reporter settings are invalid
 */
function validateSettings(settings) {
    if (!settings || typeof settings !== 'object' || Array.isArray(settings)) {
        throw new assert_1.AssertionError({
            message: 'cspell-json-reporter settings must be an object',
            actual: typeof settings,
            expected: 'object',
        });
    }
    const { outFile = 'stdout', debug, verbose, progress } = settings;
    if (typeof outFile !== 'string') {
        throw new assert_1.AssertionError({
            message: 'cspell-json-reporter settings.outFile must be a string',
            actual: typeof outFile,
            expected: 'string',
        });
    }
    assertBooleanOrUndefined('verbose', verbose);
    assertBooleanOrUndefined('debug', debug);
    assertBooleanOrUndefined('progress', progress);
}
exports.validateSettings = validateSettings;
//# sourceMappingURL=validateSettings.js.map