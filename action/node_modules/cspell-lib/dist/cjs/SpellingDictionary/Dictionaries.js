"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDictionaryInternalSync = exports.getDictionaryInternal = exports.refreshDictionaryCache = exports.loadDictionaryDefsSync = exports.loadDictionaryDefs = void 0;
const cspell_dictionary_1 = require("cspell-dictionary");
const DictionarySettings_js_1 = require("../Settings/DictionarySettings.js");
const util_js_1 = require("../util/util.js");
const DictionaryLoader_js_1 = require("./DictionaryLoader.js");
function loadDictionaryDefs(defsToLoad) {
    return defsToLoad.map(DictionaryLoader_js_1.loadDictionary);
}
exports.loadDictionaryDefs = loadDictionaryDefs;
function loadDictionaryDefsSync(defsToLoad) {
    return defsToLoad.map(DictionaryLoader_js_1.loadDictionarySync);
}
exports.loadDictionaryDefsSync = loadDictionaryDefsSync;
function refreshDictionaryCache(maxAge) {
    return (0, DictionaryLoader_js_1.refreshCacheEntries)(maxAge);
}
exports.refreshDictionaryCache = refreshDictionaryCache;
const emptyWords = Object.freeze([]);
async function getDictionaryInternal(settings) {
    const spellDictionaries = await Promise.all(loadDictionaryDefs((0, DictionarySettings_js_1.calcDictionaryDefsToLoad)(settings)));
    return _getDictionaryInternal(settings, spellDictionaries);
}
exports.getDictionaryInternal = getDictionaryInternal;
function getDictionaryInternalSync(settings) {
    const spellDictionaries = loadDictionaryDefsSync((0, DictionarySettings_js_1.calcDictionaryDefsToLoad)(settings));
    return _getDictionaryInternal(settings, spellDictionaries);
}
exports.getDictionaryInternalSync = getDictionaryInternalSync;
function _getDictionaryInternal(settings, spellDictionaries) {
    const { words = emptyWords, userWords = emptyWords, flagWords = emptyWords, ignoreWords = emptyWords, suggestWords = emptyWords, } = settings;
    const settingsWordsDictionary = (0, cspell_dictionary_1.createSpellingDictionary)(words, '[words]', 'From Settings `words`', {
        caseSensitive: true,
        weightMap: undefined,
    });
    const settingsUserWordsDictionary = userWords.length
        ? (0, cspell_dictionary_1.createSpellingDictionary)(userWords, '[userWords]', 'From Settings `userWords`', {
            caseSensitive: true,
            weightMap: undefined,
        })
        : undefined;
    const ignoreWordsDictionary = (0, cspell_dictionary_1.createIgnoreWordsDictionary)(ignoreWords, '[ignoreWords]', 'From Settings `ignoreWords`');
    const flagWordsDictionary = (0, cspell_dictionary_1.createForbiddenWordsDictionary)(flagWords, '[flagWords]', 'From Settings `flagWords`');
    const suggestWordsDictionary = (0, cspell_dictionary_1.createSuggestDictionary)(suggestWords, '[suggestWords]', 'From Settings `suggestWords`');
    const dictionaries = [
        ...spellDictionaries,
        settingsWordsDictionary,
        settingsUserWordsDictionary,
        ignoreWordsDictionary,
        flagWordsDictionary,
        suggestWordsDictionary,
    ].filter(util_js_1.isDefined);
    return (0, cspell_dictionary_1.createCollection)(dictionaries, 'dictionary collection');
}
//# sourceMappingURL=Dictionaries.js.map