"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDictionary = exports.refreshDictionaryCache = exports.loadDictionaries = void 0;
const DictionaryReferenceCollection_1 = require("../Settings/DictionaryReferenceCollection");
const DictionarySettings_1 = require("../Settings/DictionarySettings");
const createSpellingDictionary_1 = require("./createSpellingDictionary");
const DictionaryLoader_1 = require("./DictionaryLoader");
const SpellingDictionaryCollection_1 = require("./SpellingDictionaryCollection");
function loadDictionaries(dictIds, defs) {
    const defsToLoad = (0, DictionarySettings_1.filterDictDefsToLoad)(dictIds, defs);
    return defsToLoad.map((def) => (0, DictionaryLoader_1.loadDictionary)(def.path, def));
}
exports.loadDictionaries = loadDictionaries;
function refreshDictionaryCache(maxAge) {
    return (0, DictionaryLoader_1.refreshCacheEntries)(maxAge);
}
exports.refreshDictionaryCache = refreshDictionaryCache;
function getDictionary(settings) {
    const { words = [], userWords = [], dictionaries = [], dictionaryDefinitions = [], noSuggestDictionaries = [], flagWords = [], ignoreWords = [], } = settings;
    const colNoSug = (0, DictionaryReferenceCollection_1.createDictionaryReferenceCollection)(noSuggestDictionaries);
    const colDicts = (0, DictionaryReferenceCollection_1.createDictionaryReferenceCollection)(dictionaries.concat(colNoSug.enabled()));
    const modDefs = dictionaryDefinitions.map((def) => {
        const enabled = colNoSug.isEnabled(def.name);
        if (enabled === undefined)
            return def;
        return { ...def, noSuggest: enabled };
    });
    const spellDictionaries = loadDictionaries(colDicts.enabled(), modDefs);
    const settingsDictionary = (0, createSpellingDictionary_1.createSpellingDictionary)(words.concat(userWords), '[words]', 'From Settings `words` and `userWords`', {
        caseSensitive: true,
    });
    const ignoreWordsDictionary = (0, createSpellingDictionary_1.createSpellingDictionary)(ignoreWords, '[ignoreWords]', 'From Settings `ignoreWords`', {
        caseSensitive: true,
        noSuggest: true,
    });
    const flagWordsDictionary = (0, createSpellingDictionary_1.createForbiddenWordsDictionary)(flagWords, '[flagWords]', 'From Settings `flagWords`', {});
    return (0, SpellingDictionaryCollection_1.createCollectionP)([...spellDictionaries, settingsDictionary, ignoreWordsDictionary, flagWordsDictionary], 'dictionary collection');
}
exports.getDictionary = getDictionary;
//# sourceMappingURL=Dictionaries.js.map