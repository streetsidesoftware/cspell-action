"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.suggestionsForWord = exports.SuggestionError = exports.SpellingDictionaryLoadError = exports.refreshDictionaryCache = exports.isSpellingDictionaryLoadError = exports.createSpellingDictionaryCollection = exports.createSpellingDictionary = exports.CompoundWordsMethod = exports.spellCheckFile = exports.spellCheckDocument = exports.determineFinalDocumentSettings = exports.constructSettingsForText = exports.combineTextAndLanguageSettings = exports.defaultSettingsFilename = exports.sectionCSpell = exports.searchForConfig = exports.readSettingsFiles = exports.readSettings = exports.readRawSettings = exports.mergeSettings = exports.mergeInDocSettings = exports.loadPnPSync = exports.loadPnP = exports.loadConfig = exports.ImportError = exports.getSources = exports.getGlobalSettings = exports.getDefaultSettings = exports.getDefaultBundledSettings = exports.getCachedFileSize = exports.finalizeSettings = exports.extractImportErrors = exports.extractDependencies = exports.ENV_CSPELL_GLOB_ROOT = exports.defaultFileName = exports.defaultConfigFilenames = exports.currentSettingsFileVersion = exports.clearCachedSettingsFiles = exports.checkFilenameMatchesGlob = exports.calcOverrideSettings = exports.updateTextDocument = exports.createTextDocument = exports.getLanguagesForExt = exports.getLanguageIdsForBaseFilename = exports.UnknownFeatureFlagError = exports.getSystemFeatureFlags = exports.FeatureFlags = exports.isBinaryFile = exports.fileToTextDocument = exports.fileToDocument = void 0;
exports.getDictionary = exports.clearCachedFiles = exports.ExclusionHelper = exports.Text = exports.Link = exports.writeToFileIterableP = exports.writeToFileIterable = exports.writeToFile = exports.readFileSync = exports.readFile = exports.asyncIterableToArray = exports.validateText = exports.IncludeExcludeFlag = exports.checkTextDocument = exports.checkText = exports.resolveFile = exports.setLogger = exports.getLogger = exports.traceWordsAsync = exports.traceWords = exports.shouldCheckDocument = exports.DocumentValidator = exports.suggestionsForWords = void 0;
const ExclusionHelper = __importStar(require("./exclusionHelper"));
exports.ExclusionHelper = ExclusionHelper;
const Link = __importStar(require("./Settings/index.link"));
exports.Link = Link;
const Text = __importStar(require("./util/text"));
exports.Text = Text;
var Document_1 = require("./Document");
Object.defineProperty(exports, "fileToDocument", { enumerable: true, get: function () { return Document_1.fileToDocument; } });
Object.defineProperty(exports, "fileToTextDocument", { enumerable: true, get: function () { return Document_1.fileToTextDocument; } });
Object.defineProperty(exports, "isBinaryFile", { enumerable: true, get: function () { return Document_1.isBinaryFile; } });
var FeatureFlags_1 = require("./FeatureFlags");
Object.defineProperty(exports, "FeatureFlags", { enumerable: true, get: function () { return FeatureFlags_1.FeatureFlags; } });
Object.defineProperty(exports, "getSystemFeatureFlags", { enumerable: true, get: function () { return FeatureFlags_1.getSystemFeatureFlags; } });
Object.defineProperty(exports, "UnknownFeatureFlagError", { enumerable: true, get: function () { return FeatureFlags_1.UnknownFeatureFlagError; } });
var LanguageIds_1 = require("./LanguageIds");
Object.defineProperty(exports, "getLanguageIdsForBaseFilename", { enumerable: true, get: function () { return LanguageIds_1.getLanguagesForBasename; } });
Object.defineProperty(exports, "getLanguagesForExt", { enumerable: true, get: function () { return LanguageIds_1.getLanguagesForExt; } });
var TextDocument_1 = require("./Models/TextDocument");
Object.defineProperty(exports, "createTextDocument", { enumerable: true, get: function () { return TextDocument_1.createTextDocument; } });
Object.defineProperty(exports, "updateTextDocument", { enumerable: true, get: function () { return TextDocument_1.updateTextDocument; } });
var Settings_1 = require("./Settings");
Object.defineProperty(exports, "calcOverrideSettings", { enumerable: true, get: function () { return Settings_1.calcOverrideSettings; } });
Object.defineProperty(exports, "checkFilenameMatchesGlob", { enumerable: true, get: function () { return Settings_1.checkFilenameMatchesGlob; } });
Object.defineProperty(exports, "clearCachedSettingsFiles", { enumerable: true, get: function () { return Settings_1.clearCachedSettingsFiles; } });
Object.defineProperty(exports, "currentSettingsFileVersion", { enumerable: true, get: function () { return Settings_1.currentSettingsFileVersion; } });
Object.defineProperty(exports, "defaultConfigFilenames", { enumerable: true, get: function () { return Settings_1.defaultConfigFilenames; } });
Object.defineProperty(exports, "defaultFileName", { enumerable: true, get: function () { return Settings_1.defaultFileName; } });
Object.defineProperty(exports, "ENV_CSPELL_GLOB_ROOT", { enumerable: true, get: function () { return Settings_1.ENV_CSPELL_GLOB_ROOT; } });
Object.defineProperty(exports, "extractDependencies", { enumerable: true, get: function () { return Settings_1.extractDependencies; } });
Object.defineProperty(exports, "extractImportErrors", { enumerable: true, get: function () { return Settings_1.extractImportErrors; } });
Object.defineProperty(exports, "finalizeSettings", { enumerable: true, get: function () { return Settings_1.finalizeSettings; } });
Object.defineProperty(exports, "getCachedFileSize", { enumerable: true, get: function () { return Settings_1.getCachedFileSize; } });
Object.defineProperty(exports, "getDefaultBundledSettings", { enumerable: true, get: function () { return Settings_1.getDefaultBundledSettings; } });
Object.defineProperty(exports, "getDefaultSettings", { enumerable: true, get: function () { return Settings_1.getDefaultSettings; } });
Object.defineProperty(exports, "getGlobalSettings", { enumerable: true, get: function () { return Settings_1.getGlobalSettings; } });
Object.defineProperty(exports, "getSources", { enumerable: true, get: function () { return Settings_1.getSources; } });
Object.defineProperty(exports, "ImportError", { enumerable: true, get: function () { return Settings_1.ImportError; } });
Object.defineProperty(exports, "loadConfig", { enumerable: true, get: function () { return Settings_1.loadConfig; } });
Object.defineProperty(exports, "loadPnP", { enumerable: true, get: function () { return Settings_1.loadPnP; } });
Object.defineProperty(exports, "loadPnPSync", { enumerable: true, get: function () { return Settings_1.loadPnPSync; } });
Object.defineProperty(exports, "mergeInDocSettings", { enumerable: true, get: function () { return Settings_1.mergeInDocSettings; } });
Object.defineProperty(exports, "mergeSettings", { enumerable: true, get: function () { return Settings_1.mergeSettings; } });
Object.defineProperty(exports, "readRawSettings", { enumerable: true, get: function () { return Settings_1.readRawSettings; } });
Object.defineProperty(exports, "readSettings", { enumerable: true, get: function () { return Settings_1.readSettings; } });
Object.defineProperty(exports, "readSettingsFiles", { enumerable: true, get: function () { return Settings_1.readSettingsFiles; } });
Object.defineProperty(exports, "searchForConfig", { enumerable: true, get: function () { return Settings_1.searchForConfig; } });
Object.defineProperty(exports, "sectionCSpell", { enumerable: true, get: function () { return Settings_1.sectionCSpell; } });
var Settings_2 = require("./Settings");
Object.defineProperty(exports, "defaultSettingsFilename", { enumerable: true, get: function () { return Settings_2.defaultFileName; } });
var TextDocumentSettings_1 = require("./Settings/TextDocumentSettings");
Object.defineProperty(exports, "combineTextAndLanguageSettings", { enumerable: true, get: function () { return TextDocumentSettings_1.combineTextAndLanguageSettings; } });
Object.defineProperty(exports, "constructSettingsForText", { enumerable: true, get: function () { return TextDocumentSettings_1.combineTextAndLanguageSettings; } });
var spellCheckFile_1 = require("./spellCheckFile");
Object.defineProperty(exports, "determineFinalDocumentSettings", { enumerable: true, get: function () { return spellCheckFile_1.determineFinalDocumentSettings; } });
Object.defineProperty(exports, "spellCheckDocument", { enumerable: true, get: function () { return spellCheckFile_1.spellCheckDocument; } });
Object.defineProperty(exports, "spellCheckFile", { enumerable: true, get: function () { return spellCheckFile_1.spellCheckFile; } });
var SpellingDictionary_1 = require("./SpellingDictionary");
Object.defineProperty(exports, "CompoundWordsMethod", { enumerable: true, get: function () { return SpellingDictionary_1.CompoundWordsMethod; } });
Object.defineProperty(exports, "createSpellingDictionary", { enumerable: true, get: function () { return SpellingDictionary_1.createSpellingDictionary; } });
Object.defineProperty(exports, "createSpellingDictionaryCollection", { enumerable: true, get: function () { return SpellingDictionary_1.createCollection; } });
Object.defineProperty(exports, "isSpellingDictionaryLoadError", { enumerable: true, get: function () { return SpellingDictionary_1.isSpellingDictionaryLoadError; } });
Object.defineProperty(exports, "refreshDictionaryCache", { enumerable: true, get: function () { return SpellingDictionary_1.refreshDictionaryCache; } });
Object.defineProperty(exports, "SpellingDictionaryLoadError", { enumerable: true, get: function () { return SpellingDictionary_1.SpellingDictionaryLoadError; } });
var suggestions_1 = require("./suggestions");
Object.defineProperty(exports, "SuggestionError", { enumerable: true, get: function () { return suggestions_1.SuggestionError; } });
Object.defineProperty(exports, "suggestionsForWord", { enumerable: true, get: function () { return suggestions_1.suggestionsForWord; } });
Object.defineProperty(exports, "suggestionsForWords", { enumerable: true, get: function () { return suggestions_1.suggestionsForWords; } });
var textValidation_1 = require("./textValidation");
Object.defineProperty(exports, "DocumentValidator", { enumerable: true, get: function () { return textValidation_1.DocumentValidator; } });
Object.defineProperty(exports, "shouldCheckDocument", { enumerable: true, get: function () { return textValidation_1.shouldCheckDocument; } });
var trace_1 = require("./trace");
Object.defineProperty(exports, "traceWords", { enumerable: true, get: function () { return trace_1.traceWords; } });
Object.defineProperty(exports, "traceWordsAsync", { enumerable: true, get: function () { return trace_1.traceWordsAsync; } });
var logger_1 = require("./util/logger");
Object.defineProperty(exports, "getLogger", { enumerable: true, get: function () { return logger_1.getLogger; } });
Object.defineProperty(exports, "setLogger", { enumerable: true, get: function () { return logger_1.setLogger; } });
var resolveFile_1 = require("./util/resolveFile");
Object.defineProperty(exports, "resolveFile", { enumerable: true, get: function () { return resolveFile_1.resolveFile; } });
var validator_1 = require("./validator");
Object.defineProperty(exports, "checkText", { enumerable: true, get: function () { return validator_1.checkText; } });
Object.defineProperty(exports, "checkTextDocument", { enumerable: true, get: function () { return validator_1.checkTextDocument; } });
Object.defineProperty(exports, "IncludeExcludeFlag", { enumerable: true, get: function () { return validator_1.IncludeExcludeFlag; } });
Object.defineProperty(exports, "validateText", { enumerable: true, get: function () { return validator_1.validateText; } });
__exportStar(require("@cspell/cspell-types"), exports);
var cspell_io_1 = require("cspell-io");
Object.defineProperty(exports, "asyncIterableToArray", { enumerable: true, get: function () { return cspell_io_1.asyncIterableToArray; } });
Object.defineProperty(exports, "readFile", { enumerable: true, get: function () { return cspell_io_1.readFile; } });
Object.defineProperty(exports, "readFileSync", { enumerable: true, get: function () { return cspell_io_1.readFileSync; } });
Object.defineProperty(exports, "writeToFile", { enumerable: true, get: function () { return cspell_io_1.writeToFile; } });
Object.defineProperty(exports, "writeToFileIterable", { enumerable: true, get: function () { return cspell_io_1.writeToFileIterable; } });
Object.defineProperty(exports, "writeToFileIterableP", { enumerable: true, get: function () { return cspell_io_1.writeToFileIterableP; } });
var clearCachedFiles_1 = require("./clearCachedFiles");
Object.defineProperty(exports, "clearCachedFiles", { enumerable: true, get: function () { return clearCachedFiles_1.clearCachedFiles; } });
var getDictionary_1 = require("./getDictionary");
Object.defineProperty(exports, "getDictionary", { enumerable: true, get: function () { return getDictionary_1.getDictionary; } });
//# sourceMappingURL=index.js.map