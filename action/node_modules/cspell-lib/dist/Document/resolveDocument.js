"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveDocument = exports.resolveDocumentToTextDocument = exports.documentToTextDocument = exports.fileToTextDocument = exports.fileToDocument = void 0;
const promises_1 = require("fs/promises");
const vscode_uri_1 = require("vscode-uri");
const TextDocument_1 = require("../Models/TextDocument");
const util_1 = require("../util/util");
const defaultEncoding = 'utf8';
function fileToDocument(file, text, languageId, locale) {
    return (0, util_1.clean)({
        uri: vscode_uri_1.URI.file(file).toString(),
        text,
        languageId,
        locale,
    });
}
exports.fileToDocument = fileToDocument;
async function fileToTextDocument(file) {
    return documentToTextDocument(await resolveDocument(fileToDocument(file)));
}
exports.fileToTextDocument = fileToTextDocument;
function documentToTextDocument(document) {
    const { uri, text: content, languageId, locale } = document;
    return (0, TextDocument_1.createTextDocument)({ uri, content, languageId, locale });
}
exports.documentToTextDocument = documentToTextDocument;
async function resolveDocumentToTextDocument(doc) {
    return documentToTextDocument(await resolveDocument(doc));
}
exports.resolveDocumentToTextDocument = resolveDocumentToTextDocument;
async function readDocument(filename, encoding = defaultEncoding) {
    const text = await (0, promises_1.readFile)(filename, encoding);
    const uri = vscode_uri_1.URI.file(filename).toString();
    return {
        uri,
        text,
    };
}
function resolveDocument(document, encoding) {
    if (isDocumentWithText(document))
        return Promise.resolve(document);
    const uri = vscode_uri_1.URI.parse(document.uri);
    if (uri.scheme !== 'file') {
        throw new Error(`Unsupported schema: "${uri.scheme}", open "${uri.toString()}"`);
    }
    return readDocument(uri.fsPath, encoding);
}
exports.resolveDocument = resolveDocument;
function isDocumentWithText(doc) {
    return doc.text !== undefined;
}
//# sourceMappingURL=resolveDocument.js.map