import * as ExclusionHelper from './exclusionHelper.mjs';
import * as Link from './Settings/index.link.mjs';
import * as Text from './util/text.mjs';
export type { Document } from './Document/index.mjs';
export { fileToDocument, fileToTextDocument, isBinaryFile } from './Document/index.mjs';
export { ExcludeFilesGlobMap, ExclusionFunction } from './exclusionHelper.mjs';
export { FeatureFlag, FeatureFlags, getSystemFeatureFlags, UnknownFeatureFlagError } from './FeatureFlags/index.mjs';
export { getLanguagesForBasename as getLanguageIdsForBaseFilename, getLanguagesForExt } from './LanguageIds.mjs';
export type { CreateTextDocumentParams, TextDocument, TextDocumentLine, TextDocumentRef, } from './Models/TextDocument.mjs';
export { createTextDocument, updateTextDocument } from './Models/TextDocument.mjs';
export { calcOverrideSettings, checkFilenameMatchesGlob, clearCachedSettingsFiles, type ConfigurationDependencies, currentSettingsFileVersion, defaultConfigFilenames, defaultFileName, ENV_CSPELL_GLOB_ROOT, extractDependencies, extractImportErrors, finalizeSettings, getCachedFileSize, getDefaultBundledSettings, getDefaultSettings, getGlobalSettings, getSources, ImportError, type ImportFileRefWithError, loadConfig, loadPnP, loadPnPSync, mergeInDocSettings, mergeSettings, readRawSettings, readSettings, readSettingsFiles, searchForConfig, sectionCSpell, } from './Settings/index.mjs';
export { defaultFileName as defaultSettingsFilename } from './Settings/index.mjs';
export { combineTextAndLanguageSettings, combineTextAndLanguageSettings as constructSettingsForText, } from './Settings/TextDocumentSettings.mjs';
export { determineFinalDocumentSettings, DetermineFinalDocumentSettingsResult, spellCheckDocument, spellCheckFile, SpellCheckFileOptions, SpellCheckFileResult, } from './spellCheckFile.mjs';
export { CompoundWordsMethod, createSpellingDictionary, createCollection as createSpellingDictionaryCollection, isSpellingDictionaryLoadError, refreshDictionaryCache, SpellingDictionary, SpellingDictionaryCollection, SpellingDictionaryLoadError, SuggestionCollector, SuggestionResult, SuggestOptions, } from './SpellingDictionary/index.mjs';
export type { SuggestedWord, SuggestionOptions, SuggestionsForWordResult } from './suggestions.mjs';
export { SuggestionError, suggestionsForWord, suggestionsForWords } from './suggestions.mjs';
export { DocumentValidator, DocumentValidatorOptions, shouldCheckDocument } from './textValidation/index.mjs';
export type { TraceOptions, TraceResult } from './trace.mjs';
export { traceWords, traceWordsAsync } from './trace.mjs';
export { getLogger, Logger, setLogger } from './util/logger.mjs';
export { resolveFile } from './util/resolveFile.mjs';
export { checkText, checkTextDocument, CheckTextInfo, IncludeExcludeFlag, IncludeExcludeOptions, TextInfoItem, validateText, ValidationIssue, } from './validator.mjs';
export * from '@cspell/cspell-types';
export { asyncIterableToArray, readFile, readFileSync, writeToFile, writeToFileIterable, writeToFileIterableP, } from 'cspell-io';
export { Link, Text };
export { ExclusionHelper };
export { clearCachedFiles } from './clearCachedFiles.mjs';
export { getDictionary } from './getDictionary.mjs';
//# sourceMappingURL=index.d.mts.map