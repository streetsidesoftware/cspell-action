import { getCSpellIO } from '../static.mjs';
import { DictionaryLoader } from './DictionaryController/index.mjs';
let loader;
export function getDictionaryLoader(cspellIO) {
    if (loader)
        return loader;
    return (loader = new DictionaryLoader(cspellIO || getCSpellIO()));
}
export function loadDictionary(def) {
    return getDictionaryLoader().loadDictionary(def);
}
export function loadDictionarySync(def) {
    return getDictionaryLoader().loadDictionarySync(def);
}
/**
 * Check to see if any of the cached dictionaries have changed. If one has changed, reload it.
 * @param maxAge - Only check the dictionary if it has been at least `maxAge` ms since the last check.
 * @param now - optional timestamp representing now. (Mostly used in testing)
 */
export async function refreshCacheEntries(maxAge, now) {
    return getDictionaryLoader().refreshCacheEntries(maxAge, now);
}
