import { createCollection, createForbiddenWordsDictionary, createIgnoreWordsDictionary, createSpellingDictionary, createSuggestDictionary, } from 'cspell-dictionary';
import { calcDictionaryDefsToLoad } from '../Settings/DictionarySettings.mjs';
import { isDefined } from '../util/util.mjs';
import { loadDictionary, loadDictionarySync, refreshCacheEntries } from './DictionaryLoader.mjs';
export function loadDictionaryDefs(defsToLoad) {
    return defsToLoad.map(loadDictionary);
}
export function loadDictionaryDefsSync(defsToLoad) {
    return defsToLoad.map(loadDictionarySync);
}
export function refreshDictionaryCache(maxAge) {
    return refreshCacheEntries(maxAge);
}
const emptyWords = Object.freeze([]);
export async function getDictionaryInternal(settings) {
    const spellDictionaries = await Promise.all(loadDictionaryDefs(calcDictionaryDefsToLoad(settings)));
    return _getDictionaryInternal(settings, spellDictionaries);
}
export function getDictionaryInternalSync(settings) {
    const spellDictionaries = loadDictionaryDefsSync(calcDictionaryDefsToLoad(settings));
    return _getDictionaryInternal(settings, spellDictionaries);
}
function _getDictionaryInternal(settings, spellDictionaries) {
    const { words = emptyWords, userWords = emptyWords, flagWords = emptyWords, ignoreWords = emptyWords, suggestWords = emptyWords, } = settings;
    const settingsWordsDictionary = createSpellingDictionary(words, '[words]', 'From Settings `words`', {
        caseSensitive: true,
        weightMap: undefined,
    });
    const settingsUserWordsDictionary = userWords.length
        ? createSpellingDictionary(userWords, '[userWords]', 'From Settings `userWords`', {
            caseSensitive: true,
            weightMap: undefined,
        })
        : undefined;
    const ignoreWordsDictionary = createIgnoreWordsDictionary(ignoreWords, '[ignoreWords]', 'From Settings `ignoreWords`');
    const flagWordsDictionary = createForbiddenWordsDictionary(flagWords, '[flagWords]', 'From Settings `flagWords`');
    const suggestWordsDictionary = createSuggestDictionary(suggestWords, '[suggestWords]', 'From Settings `suggestWords`');
    const dictionaries = [
        ...spellDictionaries,
        settingsWordsDictionary,
        settingsUserWordsDictionary,
        ignoreWordsDictionary,
        flagWordsDictionary,
        suggestWordsDictionary,
    ].filter(isDefined);
    return createCollection(dictionaries, 'dictionary collection');
}
