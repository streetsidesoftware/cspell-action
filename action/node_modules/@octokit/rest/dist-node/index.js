'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@octokit/core');
var pluginRequestLog = require('@octokit/plugin-request-log');
var pluginPaginateRest = require('@octokit/plugin-paginate-rest');
var pluginRestEndpointMethods = require('@octokit/plugin-rest-endpoint-methods');

const VERSION = "17.1.1";

const Octokit = core.Octokit.plugin([// Workaround to prevent TypeScript from widening the inferred return type of
// plugins passed to Octokit, which would result in type information (e.g.
// methods provided by plugins) not being added to Octokit instances.
//
// See https://github.com/octokit/core.js/issues/51#issuecomment-596846088
pluginRequestLog.requestLog, pluginRestEndpointMethods.restEndpointMethods, pluginPaginateRest.paginateRest]).defaults({
  userAgent: `octokit-rest.js/${VERSION}`
});

exports.Octokit = Octokit;
//# sourceMappingURL=index.js.map
